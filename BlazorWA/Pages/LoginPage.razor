@page "/login"
@using System.Net.Http
@inject HttpClient Http

<h3>Login</h3>

<EditForm Model="login" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="login.Email" class="form-control" />
        <ValidationMessage For="@(() => login.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="login.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => login.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

<p> </p>

@code {
    private DomainModels.Login login = new DomainModels.Login();
    private string errorMessage; // Property to store the error message

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("https://h2-api.onrender.com/api/Users/login", login);
        if (response.IsSuccessStatusCode)
        {
            //Console.WriteLine(response.Content.ReadFromJsonAsync());

            var token = await response.Content.ReadAsStringAsync();
            await LocalStorage.SetItemAsync("authToken", token);
            //NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = await response.Content.ReadAsStringAsync(); 
            StateHasChanged(); 
        }
    }
}
