@page "/room/{roomId}"
@inject HttpClient Http
@using System.Text.Json

<h1>Room number @roomId </h1>

@if (roomToShow == null)
{
    <p><em>Loading...</em></p>
    @error
}
else
{
    <div>
        <h2>@roomToShow.RoomName</h2>
        <p>Price per day: @roomToShow.PricePerDay</p>
        <p>Number of beds: @roomToShow.NumberOfBeds</p>
        <p>Picture URLs:</p>
        <ul>
            @foreach (var url in roomToShow.pictureURLs)
            {
                <li><img src="@url" alt="Room Picture" /></li>
            }
        </ul>
    </div>
}

@code {
    [Parameter]
    public string roomId {get; set;}
    private RoomDTO roomToShow;

    public string error; 

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<RoomDTO>("https://h2-api.onrender.com/api/Rooms/1");
            if (response != null)
            {
                roomToShow = response;
            }
            else
            {
                // Handle the case where the response is null or empty
                error = "No room found.";
            }
        }
        catch (Exception ex)
        {
            // Log the exception or handle it as needed
            error = $"An error occurred: {ex.Message}";
        }
    }
}

}
